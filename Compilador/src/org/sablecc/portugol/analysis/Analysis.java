/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.portugol.analysis;

import org.sablecc.portugol.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgram(AProgram node);
    void caseAProgramHeading(AProgramHeading node);
    void caseADeclarations(ADeclarations node);
    void caseAVariablesDeclaration(AVariablesDeclaration node);
    void caseASingleVariablesDefinitionList(ASingleVariablesDefinitionList node);
    void caseAMultipleVariablesDefinitionList(AMultipleVariablesDefinitionList node);
    void caseAVariablesDefinition(AVariablesDefinition node);
    void caseASingleIdentifierList(ASingleIdentifierList node);
    void caseAMultipleIdentifierList(AMultipleIdentifierList node);
    void caseAType(AType node);
    void caseABody(ABody node);
    void caseASingleStatementSequence(ASingleStatementSequence node);
    void caseAMultipleStatementSequence(AMultipleStatementSequence node);
    void caseAWritelnStatement(AWritelnStatement node);
    void caseAAssignmentStatement(AAssignmentStatement node);
    void caseAEmptyStatement(AEmptyStatement node);
    void caseATermExpression(ATermExpression node);
    void caseAPlusExpression(APlusExpression node);
    void caseAMinusExpression(AMinusExpression node);
    void caseAFactorTerm(AFactorTerm node);
    void caseAMultTerm(AMultTerm node);
    void caseADivTerm(ADivTerm node);
    void caseAIdentifierFactor(AIdentifierFactor node);
    void caseANumberFactor(ANumberFactor node);
    void caseAExpressionFactor(AExpressionFactor node);

    void caseTEnd(TEnd node);
    void caseTDiv(TDiv node);
    void caseTVar(TVar node);
    void caseTBegin(TBegin node);
    void caseTProgram(TProgram node);
    void caseTWriteln(TWriteln node);
    void caseTInteger(TInteger node);
    void caseTPlus(TPlus node);
    void caseTMinus(TMinus node);
    void caseTMult(TMult node);
    void caseTAssignop(TAssignop node);
    void caseTComma(TComma node);
    void caseTColon(TColon node);
    void caseTSemicolon(TSemicolon node);
    void caseTDot(TDot node);
    void caseTLParen(TLParen node);
    void caseTRParen(TRParen node);
    void caseTIdentifier(TIdentifier node);
    void caseTNumber(TNumber node);
    void caseTComment(TComment node);
    void caseTBlanks(TBlanks node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
